package ${package.Controller};

import ${cfg.commonUtilPath}.entity.ResultEntity;

import ${cfg.basePackagePath}.${cfg.enumPackagePath}.ServerCodeEnum;
import ${cfg.basePackagePath}.${cfg.requestPackagePath}.${entity}Req;
import ${cfg.basePackagePath}.${cfg.requestPackagePath}.${entity}PageReq;
import ${cfg.basePackagePath}.${cfg.responsePackagePath}.${entity}Resp;
import ${package.Service}.${table.serviceName};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
#end
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import javax.validation.Valid;



/**
 * $!{table.comment}
 *
 * @Author ${author}
 * @Date ${date}
 */
@Api(value="${table.controllerName}", tags={"$!{table.comment} API"})
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
    #set($serverceVariableName=$table.serviceName.substring(0,1).toLowerCase()+$table.serviceName.substring(1))

    @Autowired
    private ${table.serviceName} ${serverceVariableName};

    @ApiOperation("分页查询")
    @GetMapping
    public ResultEntity<${entity}Resp> getPageList(@Valid ${entity}PageReq pageRequest) {
        // TODO query service
        return ResultEntity.success(${serverceVariableName}.getPageList(pageRequest));
    }

    @ApiOperation("对资源的非幂等操作")
    @PostMapping
    public ResultEntity<${entity}Resp> create(@RequestBody @Valid ${entity}Req request) {
        // TODO create service
        if (${serverceVariableName}.create(request)) {
            return ResultEntity.success();
        }
        return ResultEntity.failure();
    }

    @ApiOperation("对资源的幂等操作")
    @PutMapping
    public ResultEntity<${entity}Resp> update(@RequestBody @Valid ${entity}Req request) {
        // TODO update service
        return ResultEntity.success();
    }

    @ApiOperation("对资源的删除操作")
    @ApiImplicitParam(name = "id", value = "$!{table.comment}ID", paramType = "path", required = true, dataType = "long", example = "1")
    @DeleteMapping("/{id}")
    public ResultEntity delete(@PathVariable("id") Long id) {
        // TODO delete service
        if (${serverceVariableName}.deleteOne(id)) {
            return ResultEntity.success();
        }
        return ResultEntity.failure(ServerCodeEnum.SERVER_ERROR);
    }
}
#end